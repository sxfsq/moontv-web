(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[890],{23494:function(){},5454:function(){},77914:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";let fileConfig,cachedConfig;__webpack_require__.d(__webpack_exports__,{Hz:function(){return API_CONFIG},iE:function(){return getConfig},ll:function(){return getAvailableApiSites}});var _lib_db__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(23125),_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(5523),process=__webpack_require__(91202);let API_CONFIG={search:{path:"?ac=videolist&wd=",pagePath:"?ac=videolist&wd={query}&pg={page}",headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36",Accept:"application/json"}},detail:{path:"?ac=videolist&ids=",headers:{"User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36",Accept:"application/json"}}};async function initConfig(){if(cachedConfig)return;if("true"===process.env.DOCKER_ENV){let _require=eval("require"),fs=_require("fs"),path=_require("path"),configPath=path.join(process.cwd(),"config.json"),raw=fs.readFileSync(configPath,"utf-8");fileConfig=JSON.parse(raw),console.log("load dynamic config success")}else fileConfig=_runtime__WEBPACK_IMPORTED_MODULE_1__.Z;let storageType=process.env.NEXT_PUBLIC_STORAGE_TYPE||"localstorage";if("localstorage"!==storageType){let storage=(0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.cF)();try{let adminConfig=null;storage&&"function"==typeof storage.getAdminConfig&&(adminConfig=await storage.getAdminConfig());let userNames=[];if(storage&&"function"==typeof storage.getAllUsers)try{userNames=await storage.getAllUsers()}catch(e){console.error("获取用户列表失败:",e)}let apiSiteEntries=Object.entries(fileConfig.api_site),customCategories=fileConfig.custom_category||[];if(adminConfig){let sourceConfigMap=new Map((adminConfig.SourceConfig||[]).map(e=>[e.key,e]));apiSiteEntries.forEach(e=>{let[t,a]=e;sourceConfigMap.set(t,{key:t,name:a.name,api:a.api,detail:a.detail,from:"config",disabled:!1})}),adminConfig.SourceConfig=Array.from(sourceConfigMap.values());let apiSiteKeys=new Set(apiSiteEntries.map(e=>{let[t]=e;return t}));adminConfig.SourceConfig.forEach(e=>{apiSiteKeys.has(e.key)||(e.from="custom")}),adminConfig.CustomCategories||(adminConfig.CustomCategories=[]);let customCategoriesMap=new Map(adminConfig.CustomCategories.map(e=>[e.query+e.type,e]));customCategories.forEach(e=>{customCategoriesMap.set(e.query+e.type,{name:e.name,type:e.type,query:e.query,from:"config",disabled:!1})});let customCategoriesKeys=new Set(customCategories.map(e=>e.query+e.type));customCategoriesMap.forEach(e=>{customCategoriesKeys.has(e.query+e.type)||(e.from="custom")}),adminConfig.CustomCategories=Array.from(customCategoriesMap.values());let existedUsers=new Set((adminConfig.UserConfig.Users||[]).map(e=>e.username));userNames.forEach(e=>{existedUsers.has(e)||adminConfig.UserConfig.Users.push({username:e,role:"user"})});let ownerUser=process.env.USERNAME;ownerUser&&(adminConfig.UserConfig.Users=adminConfig.UserConfig.Users.filter(e=>e.username!==ownerUser),adminConfig.UserConfig.Users.unshift({username:ownerUser,role:"owner"}))}else{let allUsers=userNames.map(e=>({username:e,role:"user"})),ownerUser=process.env.USERNAME;ownerUser&&(allUsers=allUsers.filter(e=>e.username!==ownerUser)).unshift({username:ownerUser,role:"owner"}),adminConfig={SiteConfig:{SiteName:process.env.SITE_NAME||"MoonTV",Announcement:process.env.ANNOUNCEMENT||"本网站仅提供影视信息搜索服务，所有内容均来自第三方网站。本站不存储任何视频资源，不对任何内容的准确性、合法性、完整性负责。",SearchDownstreamMaxPage:Number(process.env.NEXT_PUBLIC_SEARCH_MAX_PAGE)||5,SiteInterfaceCacheTime:fileConfig.cache_time||7200,ImageProxy:process.env.NEXT_PUBLIC_IMAGE_PROXY||"",DoubanProxy:process.env.NEXT_PUBLIC_DOUBAN_PROXY||"",DisableYellowFilter:"true"===process.env.NEXT_PUBLIC_DISABLE_YELLOW_FILTER},UserConfig:{AllowRegister:"true"===process.env.NEXT_PUBLIC_ENABLE_REGISTER,Users:allUsers},SourceConfig:apiSiteEntries.map(e=>{let[t,a]=e;return{key:t,name:a.name,api:a.api,detail:a.detail,from:"config",disabled:!1}}),CustomCategories:customCategories.map(e=>({name:e.name,type:e.type,query:e.query,from:"config",disabled:!1}))}}storage&&"function"==typeof storage.setAdminConfig&&await storage.setAdminConfig(adminConfig),cachedConfig=adminConfig}catch(err){console.error("加载管理员配置失败:",err)}}else{var _fileConfig_custom_category;cachedConfig={SiteConfig:{SiteName:process.env.SITE_NAME||"MoonTV",Announcement:process.env.ANNOUNCEMENT||"本网站仅提供影视信息搜索服务，所有内容均来自第三方网站。本站不存储任何视频资源，不对任何内容的准确性、合法性、完整性负责。",SearchDownstreamMaxPage:Number(process.env.NEXT_PUBLIC_SEARCH_MAX_PAGE)||5,SiteInterfaceCacheTime:fileConfig.cache_time||7200,ImageProxy:process.env.NEXT_PUBLIC_IMAGE_PROXY||"",DoubanProxy:process.env.NEXT_PUBLIC_DOUBAN_PROXY||"",DisableYellowFilter:"true"===process.env.NEXT_PUBLIC_DISABLE_YELLOW_FILTER},UserConfig:{AllowRegister:"true"===process.env.NEXT_PUBLIC_ENABLE_REGISTER,Users:[]},SourceConfig:Object.entries(fileConfig.api_site).map(e=>{let[t,a]=e;return{key:t,name:a.name,api:a.api,detail:a.detail,from:"config",disabled:!1}}),CustomCategories:(null===(_fileConfig_custom_category=fileConfig.custom_category)||void 0===_fileConfig_custom_category?void 0:_fileConfig_custom_category.map(e=>({name:e.name,type:e.type,query:e.query,from:"config",disabled:!1})))||[]}}}async function getConfig(){let e=process.env.NEXT_PUBLIC_STORAGE_TYPE||"localstorage";if("true"===process.env.DOCKER_ENV||"localstorage"===e)return await initConfig(),cachedConfig;let t=(0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.cF)(),a=null;if(t&&"function"==typeof t.getAdminConfig&&(a=await t.getAdminConfig()),a){a.CustomCategories||(a.CustomCategories=[]),a.SiteConfig.SiteName=process.env.SITE_NAME||"MoonTV",a.SiteConfig.Announcement=process.env.ANNOUNCEMENT||"本网站仅提供影视信息搜索服务，所有内容均来自第三方网站。本站不存储任何视频资源，不对任何内容的准确性、合法性、完整性负责。",a.UserConfig.AllowRegister="true"===process.env.NEXT_PUBLIC_ENABLE_REGISTER,a.SiteConfig.ImageProxy=process.env.NEXT_PUBLIC_IMAGE_PROXY||"",a.SiteConfig.DoubanProxy=process.env.NEXT_PUBLIC_DOUBAN_PROXY||"",a.SiteConfig.DisableYellowFilter="true"===process.env.NEXT_PUBLIC_DISABLE_YELLOW_FILTER;let e=Object.entries((fileConfig=_runtime__WEBPACK_IMPORTED_MODULE_1__.Z).api_site),t=new Map((a.SourceConfig||[]).map(e=>[e.key,e]));e.forEach(e=>{let[a,i]=e,r=t.get(a);r?(r.name=i.name,r.api=i.api,r.detail=i.detail,r.from="config"):t.set(a,{key:a,name:i.name,api:i.api,detail:i.detail,from:"config",disabled:!1})});let i=new Set(e.map(e=>{let[t]=e;return t}));t.forEach(e=>{i.has(e.key)||(e.from="custom")}),a.SourceConfig=Array.from(t.values());let r=fileConfig.custom_category||[];a.CustomCategories=r.map(e=>({name:e.name,type:e.type,query:e.query,from:"config",disabled:!1}));let n=process.env.USERNAME||"",s=!1;a.UserConfig.Users.forEach(e=>{e.username!==n&&"owner"===e.role&&(e.role="user"),e.username===n&&(s=!0,e.role="owner")}),s||a.UserConfig.Users.unshift({username:n,role:"owner"}),cachedConfig=a}else await initConfig();return cachedConfig}async function resetConfig(){let storageType=process.env.NEXT_PUBLIC_STORAGE_TYPE||"localstorage",storage=(0,_lib_db__WEBPACK_IMPORTED_MODULE_0__.cF)(),userNames=[];if(storage&&"function"==typeof storage.getAllUsers)try{userNames=await storage.getAllUsers()}catch(e){console.error("获取用户列表失败:",e)}if("true"===process.env.DOCKER_ENV){let _require=eval("require"),fs=_require("fs"),path=_require("path"),configPath=path.join(process.cwd(),"config.json"),raw=fs.readFileSync(configPath,"utf-8");fileConfig=JSON.parse(raw),console.log("load dynamic config success")}else fileConfig=_runtime__WEBPACK_IMPORTED_MODULE_1__.Z;let apiSiteEntries=Object.entries(fileConfig.api_site),customCategories=fileConfig.custom_category||[],allUsers=userNames.map(e=>({username:e,role:"user"})),ownerUser=process.env.USERNAME;ownerUser&&(allUsers=allUsers.filter(e=>e.username!==ownerUser)).unshift({username:ownerUser,role:"owner"});let adminConfig={SiteConfig:{SiteName:process.env.SITE_NAME||"MoonTV",Announcement:process.env.ANNOUNCEMENT||"本网站仅提供影视信息搜索服务，所有内容均来自第三方网站。本站不存储任何视频资源，不对任何内容的准确性、合法性、完整性负责。",SearchDownstreamMaxPage:Number(process.env.NEXT_PUBLIC_SEARCH_MAX_PAGE)||5,SiteInterfaceCacheTime:fileConfig.cache_time||7200,ImageProxy:process.env.NEXT_PUBLIC_IMAGE_PROXY||"",DoubanProxy:process.env.NEXT_PUBLIC_DOUBAN_PROXY||"",DisableYellowFilter:"true"===process.env.NEXT_PUBLIC_DISABLE_YELLOW_FILTER},UserConfig:{AllowRegister:"true"===process.env.NEXT_PUBLIC_ENABLE_REGISTER,Users:allUsers},SourceConfig:apiSiteEntries.map(e=>{let[t,a]=e;return{key:t,name:a.name,api:a.api,detail:a.detail,from:"config",disabled:!1}}),CustomCategories:"redis"===storageType&&(null==customCategories?void 0:customCategories.map(e=>({name:e.name,type:e.type,query:e.query,from:"config",disabled:!1})))||[]};storage&&"function"==typeof storage.setAdminConfig&&await storage.setAdminConfig(adminConfig),null==cachedConfig&&(cachedConfig=adminConfig),cachedConfig.SiteConfig=adminConfig.SiteConfig,cachedConfig.UserConfig=adminConfig.UserConfig,cachedConfig.SourceConfig=adminConfig.SourceConfig,cachedConfig.CustomCategories=adminConfig.CustomCategories}async function getCacheTime(){return(await getConfig()).SiteConfig.SiteInterfaceCacheTime||7200}async function getAvailableApiSites(){return(await getConfig()).SourceConfig.filter(e=>!e.disabled).map(e=>({key:e.key,name:e.name,api:e.api,detail:e.detail}))}},23125:function(e,t,a){"use strict";a.d(t,{cF:function(){return T}});var i=a(91202);let r=20;function n(){return i.env.DB}class s{async getDatabase(){return this.db||(this.db=n()),this.db}async getPlayRecord(e,t){try{let a=await this.getDatabase(),i=await a.prepare("SELECT * FROM play_records WHERE username = ? AND key = ?").bind(e,t).first();if(!i)return null;return{title:i.title,source_name:i.source_name,cover:i.cover,year:i.year,index:i.index_episode,total_episodes:i.total_episodes,play_time:i.play_time,total_time:i.total_time,save_time:i.save_time,search_title:i.search_title||void 0}}catch(e){throw console.error("Failed to get play record:",e),e}}async setPlayRecord(e,t,a){try{let i=await this.getDatabase();await i.prepare("\n          INSERT OR REPLACE INTO play_records \n          (username, key, title, source_name, cover, year, index_episode, total_episodes, play_time, total_time, save_time, search_title)\n          VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n        ").bind(e,t,a.title,a.source_name,a.cover,a.year,a.index,a.total_episodes,a.play_time,a.total_time,a.save_time,a.search_title||null).run()}catch(e){throw console.error("Failed to set play record:",e),e}}async getAllPlayRecords(e){try{let t=await this.getDatabase(),a=await t.prepare("SELECT * FROM play_records WHERE username = ? ORDER BY save_time DESC").bind(e).all(),i={};return a.results.forEach(e=>{i[e.key]={title:e.title,source_name:e.source_name,cover:e.cover,year:e.year,index:e.index_episode,total_episodes:e.total_episodes,play_time:e.play_time,total_time:e.total_time,save_time:e.save_time,search_title:e.search_title||void 0}}),i}catch(e){throw console.error("Failed to get all play records:",e),e}}async deletePlayRecord(e,t){try{let a=await this.getDatabase();await a.prepare("DELETE FROM play_records WHERE username = ? AND key = ?").bind(e,t).run()}catch(e){throw console.error("Failed to delete play record:",e),e}}async getFavorite(e,t){try{let a=await this.getDatabase(),i=await a.prepare("SELECT * FROM favorites WHERE username = ? AND key = ?").bind(e,t).first();if(!i)return null;return{title:i.title,source_name:i.source_name,cover:i.cover,year:i.year,total_episodes:i.total_episodes,save_time:i.save_time,search_title:i.search_title}}catch(e){throw console.error("Failed to get favorite:",e),e}}async setFavorite(e,t,a){try{let i=await this.getDatabase();await i.prepare("\n          INSERT OR REPLACE INTO favorites \n          (username, key, title, source_name, cover, year, total_episodes, save_time)\n          VALUES (?, ?, ?, ?, ?, ?, ?, ?)\n        ").bind(e,t,a.title,a.source_name,a.cover,a.year,a.total_episodes,a.save_time).run()}catch(e){throw console.error("Failed to set favorite:",e),e}}async getAllFavorites(e){try{let t=await this.getDatabase(),a=await t.prepare("SELECT * FROM favorites WHERE username = ? ORDER BY save_time DESC").bind(e).all(),i={};return a.results.forEach(e=>{i[e.key]={title:e.title,source_name:e.source_name,cover:e.cover,year:e.year,total_episodes:e.total_episodes,save_time:e.save_time,search_title:e.search_title}}),i}catch(e){throw console.error("Failed to get all favorites:",e),e}}async deleteFavorite(e,t){try{let a=await this.getDatabase();await a.prepare("DELETE FROM favorites WHERE username = ? AND key = ?").bind(e,t).run()}catch(e){throw console.error("Failed to delete favorite:",e),e}}async registerUser(e,t){try{let a=await this.getDatabase();await a.prepare("INSERT INTO users (username, password) VALUES (?, ?)").bind(e,t).run()}catch(e){throw console.error("Failed to register user:",e),e}}async verifyUser(e,t){try{let a=await this.getDatabase(),i=await a.prepare("SELECT password FROM users WHERE username = ?").bind(e).first();return(null==i?void 0:i.password)===t}catch(e){throw console.error("Failed to verify user:",e),e}}async checkUserExist(e){try{let t=await this.getDatabase(),a=await t.prepare("SELECT 1 FROM users WHERE username = ?").bind(e).first();return null!==a}catch(e){throw console.error("Failed to check user existence:",e),e}}async changePassword(e,t){try{let a=await this.getDatabase();await a.prepare("UPDATE users SET password = ? WHERE username = ?").bind(t,e).run()}catch(e){throw console.error("Failed to change password:",e),e}}async deleteUser(e){try{let t=await this.getDatabase(),a=[t.prepare("DELETE FROM users WHERE username = ?").bind(e),t.prepare("DELETE FROM play_records WHERE username = ?").bind(e),t.prepare("DELETE FROM favorites WHERE username = ?").bind(e),t.prepare("DELETE FROM search_history WHERE username = ?").bind(e),t.prepare("DELETE FROM skip_configs WHERE username = ?").bind(e)];await t.batch(a)}catch(e){throw console.error("Failed to delete user:",e),e}}async getSearchHistory(e){try{let t=await this.getDatabase();return(await t.prepare("SELECT keyword FROM search_history WHERE username = ? ORDER BY created_at DESC LIMIT ?").bind(e,r).all()).results.map(e=>e.keyword)}catch(e){throw console.error("Failed to get search history:",e),e}}async addSearchHistory(e,t){try{let a=await this.getDatabase();await a.prepare("DELETE FROM search_history WHERE username = ? AND keyword = ?").bind(e,t).run(),await a.prepare("INSERT INTO search_history (username, keyword) VALUES (?, ?)").bind(e,t).run(),await a.prepare("\n          DELETE FROM search_history \n          WHERE username = ? AND id NOT IN (\n            SELECT id FROM search_history \n            WHERE username = ? \n            ORDER BY created_at DESC \n            LIMIT ?\n          )\n        ").bind(e,e,r).run()}catch(e){throw console.error("Failed to add search history:",e),e}}async deleteSearchHistory(e,t){try{let a=await this.getDatabase();t?await a.prepare("DELETE FROM search_history WHERE username = ? AND keyword = ?").bind(e,t).run():await a.prepare("DELETE FROM search_history WHERE username = ?").bind(e).run()}catch(e){throw console.error("Failed to delete search history:",e),e}}async getAllUsers(){try{let e=await this.getDatabase();return(await e.prepare("SELECT username FROM users ORDER BY created_at ASC").all()).results.map(e=>e.username)}catch(e){throw console.error("Failed to get all users:",e),e}}async getAdminConfig(){try{let e=await this.getDatabase(),t=await e.prepare("SELECT config FROM admin_config WHERE id = 1").first();if(!t)return null;return JSON.parse(t.config)}catch(e){throw console.error("Failed to get admin config:",e),e}}async setAdminConfig(e){try{let t=await this.getDatabase();await t.prepare("INSERT OR REPLACE INTO admin_config (id, config) VALUES (1, ?)").bind(JSON.stringify(e)).run()}catch(e){throw console.error("Failed to set admin config:",e),e}}async getSkipConfig(e,t,a){try{let i=await this.getDatabase(),r=await i.prepare("SELECT * FROM skip_configs WHERE username = ? AND source = ? AND id_video = ?").bind(e,t,a).first();if(!r)return null;return{enable:!!r.enable,intro_time:r.intro_time,outro_time:r.outro_time}}catch(e){throw console.error("Failed to get skip config:",e),e}}async setSkipConfig(e,t,a,i){try{let r=await this.getDatabase();await r.prepare("\n          INSERT OR REPLACE INTO skip_configs \n          (username, source, id_video, enable, intro_time, outro_time)\n          VALUES (?, ?, ?, ?, ?, ?)\n        ").bind(e,t,a,i.enable?1:0,i.intro_time,i.outro_time).run()}catch(e){throw console.error("Failed to set skip config:",e),e}}async deleteSkipConfig(e,t,a){try{let i=await this.getDatabase();await i.prepare("DELETE FROM skip_configs WHERE username = ? AND source = ? AND id_video = ?").bind(e,t,a).run()}catch(e){throw console.error("Failed to delete skip config:",e),e}}async getAllSkipConfigs(e){try{let t=await this.getDatabase(),a=await t.prepare("SELECT source, id_video, enable, intro_time, outro_time FROM skip_configs WHERE username = ?").bind(e).all(),i={};return a.results.forEach(e=>{i["".concat(e.source,"+").concat(e.id_video)]={enable:!!e.enable,intro_time:e.intro_time,outro_time:e.outro_time}}),i}catch(e){throw console.error("Failed to get all skip configs:",e),e}}constructor(){this.db=null}}var o=a(34856),c=a(91202);let l=20;function u(e){return String(e)}function d(e){return e.map(e=>String(e))}async function h(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;for(let n=0;n<t;n++)try{return await e()}catch(s){var a,i,r;let e=n===t-1;if(((null===(a=s.message)||void 0===a?void 0:a.includes("Connection"))||(null===(i=s.message)||void 0===i?void 0:i.includes("ECONNREFUSED"))||(null===(r=s.message)||void 0===r?void 0:r.includes("ENOTFOUND"))||"ECONNRESET"===s.code||"EPIPE"===s.code)&&!e){console.log("Redis operation failed, retrying... (".concat(n+1,"/").concat(t,")")),console.error("Error:",s.message),await new Promise(e=>setTimeout(e,1e3*(n+1)));try{let e=y();e.isOpen||await e.connect()}catch(e){console.error("Failed to reconnect:",e)}continue}throw s}throw Error("Max retries exceeded")}class p{prKey(e,t){return"u:".concat(e,":pr:").concat(t)}async getPlayRecord(e,t){let a=await h(()=>this.client.get(this.prKey(e,t)));return a?JSON.parse(a):null}async setPlayRecord(e,t,a){await h(()=>this.client.set(this.prKey(e,t),JSON.stringify(a)))}async getAllPlayRecords(e){let t="u:".concat(e,":pr:*"),a=await h(()=>this.client.keys(t));if(0===a.length)return{};let i=await h(()=>this.client.mGet(a)),r={};return a.forEach((t,a)=>{let n=i[a];if(n){let a=JSON.parse(n);r[u(t.replace("u:".concat(e,":pr:"),""))]=a}}),r}async deletePlayRecord(e,t){await h(()=>this.client.del(this.prKey(e,t)))}favKey(e,t){return"u:".concat(e,":fav:").concat(t)}async getFavorite(e,t){let a=await h(()=>this.client.get(this.favKey(e,t)));return a?JSON.parse(a):null}async setFavorite(e,t,a){await h(()=>this.client.set(this.favKey(e,t),JSON.stringify(a)))}async getAllFavorites(e){let t="u:".concat(e,":fav:*"),a=await h(()=>this.client.keys(t));if(0===a.length)return{};let i=await h(()=>this.client.mGet(a)),r={};return a.forEach((t,a)=>{let n=i[a];if(n){let a=JSON.parse(n);r[u(t.replace("u:".concat(e,":fav:"),""))]=a}}),r}async deleteFavorite(e,t){await h(()=>this.client.del(this.favKey(e,t)))}userPwdKey(e){return"u:".concat(e,":pwd")}async registerUser(e,t){await h(()=>this.client.set(this.userPwdKey(e),t))}async verifyUser(e,t){let a=await h(()=>this.client.get(this.userPwdKey(e)));return null!==a&&u(a)===t}async checkUserExist(e){return 1===await h(()=>this.client.exists(this.userPwdKey(e)))}async changePassword(e,t){await h(()=>this.client.set(this.userPwdKey(e),t))}async deleteUser(e){await h(()=>this.client.del(this.userPwdKey(e))),await h(()=>this.client.del(this.shKey(e)));let t="u:".concat(e,":pr:*"),a=await h(()=>this.client.keys(t));a.length>0&&await h(()=>this.client.del(a));let i="u:".concat(e,":fav:*"),r=await h(()=>this.client.keys(i));r.length>0&&await h(()=>this.client.del(r));let n="u:".concat(e,":skip:*"),s=await h(()=>this.client.keys(n));s.length>0&&await h(()=>this.client.del(s))}shKey(e){return"u:".concat(e,":sh")}async getSearchHistory(e){return d(await h(()=>this.client.lRange(this.shKey(e),0,-1)))}async addSearchHistory(e,t){let a=this.shKey(e);await h(()=>this.client.lRem(a,0,u(t))),await h(()=>this.client.lPush(a,u(t))),await h(()=>this.client.lTrim(a,0,l-1))}async deleteSearchHistory(e,t){let a=this.shKey(e);t?await h(()=>this.client.lRem(a,0,u(t))):await h(()=>this.client.del(a))}async getAllUsers(){return(await h(()=>this.client.keys("u:*:pwd"))).map(e=>{let t=e.match(/^u:(.+?):pwd$/);return t?u(t[1]):void 0}).filter(e=>"string"==typeof e)}adminConfigKey(){return"admin:config"}async getAdminConfig(){let e=await h(()=>this.client.get(this.adminConfigKey()));return e?JSON.parse(e):null}async setAdminConfig(e){await h(()=>this.client.set(this.adminConfigKey(),JSON.stringify(e)))}skipConfigKey(e,t,a){return"u:".concat(e,":skip:").concat(t,"+").concat(a)}async getSkipConfig(e,t,a){let i=await h(()=>this.client.get(this.skipConfigKey(e,t,a)));return i?JSON.parse(i):null}async setSkipConfig(e,t,a,i){await h(()=>this.client.set(this.skipConfigKey(e,t,a),JSON.stringify(i)))}async deleteSkipConfig(e,t,a){await h(()=>this.client.del(this.skipConfigKey(e,t,a)))}async getAllSkipConfigs(e){let t="u:".concat(e,":skip:*"),a=await h(()=>this.client.keys(t));if(0===a.length)return{};let i={},r=await h(()=>this.client.mGet(a));return a.forEach((e,t)=>{let a=r[t];if(a){let t=e.match(/^u:.+?:skip:(.+)$/);t&&(i[t[1]]=JSON.parse(a))}}),i}constructor(){this.client=y()}}function y(){let e=Symbol.for("__MOONTV_REDIS_CLIENT__"),t=a.g[e];if(!t){let i=c.env.REDIS_URL;if(!i)throw Error("REDIS_URL env variable not set");(t=(0,o.createClient)({url:i,socket:{reconnectStrategy:e=>(console.log("Redis reconnection attempt ".concat(e+1)),e>10)?(console.error("Redis max reconnection attempts exceeded"),!1):Math.min(1e3*Math.pow(2,e),3e4),connectTimeout:1e4,noDelay:!0},pingInterval:3e4})).on("error",e=>{console.error("Redis client error:",e)}),t.on("connect",()=>{console.log("Redis connected")}),t.on("reconnecting",()=>{console.log("Redis reconnecting...")}),t.on("ready",()=>{console.log("Redis ready")});let r=async()=>{try{await t.connect(),console.log("Redis connected successfully")}catch(e){console.error("Redis initial connection failed:",e),console.log("Will retry in 5 seconds..."),setTimeout(r,5e3)}};r(),a.g[e]=t}return t}var g=a(68097),m=a(91202);let f=20;function E(e){return String(e)}function w(e){return e.map(e=>String(e))}async function _(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;for(let n=0;n<t;n++)try{return await e()}catch(s){var a,i,r;let e=n===t-1;if(((null===(a=s.message)||void 0===a?void 0:a.includes("Connection"))||(null===(i=s.message)||void 0===i?void 0:i.includes("ECONNREFUSED"))||(null===(r=s.message)||void 0===r?void 0:r.includes("ENOTFOUND"))||"ECONNRESET"===s.code||"EPIPE"===s.code||"UpstashError"===s.name)&&!e){console.log("Upstash Redis operation failed, retrying... (".concat(n+1,"/").concat(t,")")),console.error("Error:",s.message),await new Promise(e=>setTimeout(e,1e3*(n+1)));continue}throw s}throw Error("Max retries exceeded")}class v{prKey(e,t){return"u:".concat(e,":pr:").concat(t)}async getPlayRecord(e,t){return await _(()=>this.client.get(this.prKey(e,t)))||null}async setPlayRecord(e,t,a){await _(()=>this.client.set(this.prKey(e,t),a))}async getAllPlayRecords(e){let t="u:".concat(e,":pr:*"),a=await _(()=>this.client.keys(t));if(0===a.length)return{};let i={};for(let t of a){let a=await _(()=>this.client.get(t));a&&(i[E(t.replace("u:".concat(e,":pr:"),""))]=a)}return i}async deletePlayRecord(e,t){await _(()=>this.client.del(this.prKey(e,t)))}favKey(e,t){return"u:".concat(e,":fav:").concat(t)}async getFavorite(e,t){return await _(()=>this.client.get(this.favKey(e,t)))||null}async setFavorite(e,t,a){await _(()=>this.client.set(this.favKey(e,t),a))}async getAllFavorites(e){let t="u:".concat(e,":fav:*"),a=await _(()=>this.client.keys(t));if(0===a.length)return{};let i={};for(let t of a){let a=await _(()=>this.client.get(t));a&&(i[E(t.replace("u:".concat(e,":fav:"),""))]=a)}return i}async deleteFavorite(e,t){await _(()=>this.client.del(this.favKey(e,t)))}userPwdKey(e){return"u:".concat(e,":pwd")}async registerUser(e,t){await _(()=>this.client.set(this.userPwdKey(e),t))}async verifyUser(e,t){let a=await _(()=>this.client.get(this.userPwdKey(e)));return null!==a&&E(a)===t}async checkUserExist(e){return 1===await _(()=>this.client.exists(this.userPwdKey(e)))}async changePassword(e,t){await _(()=>this.client.set(this.userPwdKey(e),t))}async deleteUser(e){await _(()=>this.client.del(this.userPwdKey(e))),await _(()=>this.client.del(this.shKey(e)));let t="u:".concat(e,":pr:*"),a=await _(()=>this.client.keys(t));a.length>0&&await _(()=>this.client.del(...a));let i="u:".concat(e,":fav:*"),r=await _(()=>this.client.keys(i));r.length>0&&await _(()=>this.client.del(...r));let n="u:".concat(e,":skip:*"),s=await _(()=>this.client.keys(n));s.length>0&&await _(()=>this.client.del(...s))}shKey(e){return"u:".concat(e,":sh")}async getSearchHistory(e){return w(await _(()=>this.client.lrange(this.shKey(e),0,-1)))}async addSearchHistory(e,t){let a=this.shKey(e);await _(()=>this.client.lrem(a,0,E(t))),await _(()=>this.client.lpush(a,E(t))),await _(()=>this.client.ltrim(a,0,f-1))}async deleteSearchHistory(e,t){let a=this.shKey(e);t?await _(()=>this.client.lrem(a,0,E(t))):await _(()=>this.client.del(a))}async getAllUsers(){return(await _(()=>this.client.keys("u:*:pwd"))).map(e=>{let t=e.match(/^u:(.+?):pwd$/);return t?E(t[1]):void 0}).filter(e=>"string"==typeof e)}adminConfigKey(){return"admin:config"}async getAdminConfig(){return await _(()=>this.client.get(this.adminConfigKey()))||null}async setAdminConfig(e){await _(()=>this.client.set(this.adminConfigKey(),e))}skipConfigKey(e,t,a){return"u:".concat(e,":skip:").concat(t,"+").concat(a)}async getSkipConfig(e,t,a){return await _(()=>this.client.get(this.skipConfigKey(e,t,a)))||null}async setSkipConfig(e,t,a,i){await _(()=>this.client.set(this.skipConfigKey(e,t,a),i))}async deleteSkipConfig(e,t,a){await _(()=>this.client.del(this.skipConfigKey(e,t,a)))}async getAllSkipConfigs(e){let t="u:".concat(e,":skip:*"),a=await _(()=>this.client.keys(t));if(0===a.length)return{};let i={},r=await _(()=>this.client.mget(a));return a.forEach((e,t)=>{let a=r[t];if(a){let t=e.match(/^u:.+?:skip:(.+)$/);t&&(i[t[1]]=a)}}),i}constructor(){this.client=C()}}function C(){let e=Symbol.for("__MOONTV_UPSTASH_REDIS_CLIENT__"),t=a.g[e];if(!t){let i=m.env.UPSTASH_URL,r=m.env.UPSTASH_TOKEN;if(!i||!r)throw Error("UPSTASH_URL and UPSTASH_TOKEN env variables must be set");t=new g.s({url:i,token:r,retry:{retries:3,backoff:e=>Math.min(1e3*Math.pow(2,e),3e4)}}),console.log("Upstash Redis client created successfully"),a.g[e]=t}return t}let S=a(91202).env.NEXT_PUBLIC_STORAGE_TYPE||"localstorage";function R(){switch(S){case"redis":return new p;case"upstash":return new v;case"d1":return new s;default:return null}}let A=null;function T(){return A||(A=R()),A}function N(e,t){return"".concat(e,"+").concat(t)}class b{async getPlayRecord(e,t,a){let i=N(t,a);return this.storage.getPlayRecord(e,i)}async savePlayRecord(e,t,a,i){let r=N(t,a);await this.storage.setPlayRecord(e,r,i)}async getAllPlayRecords(e){return this.storage.getAllPlayRecords(e)}async deletePlayRecord(e,t,a){let i=N(t,a);await this.storage.deletePlayRecord(e,i)}async getFavorite(e,t,a){let i=N(t,a);return this.storage.getFavorite(e,i)}async saveFavorite(e,t,a,i){let r=N(t,a);await this.storage.setFavorite(e,r,i)}async getAllFavorites(e){return this.storage.getAllFavorites(e)}async deleteFavorite(e,t,a){let i=N(t,a);await this.storage.deleteFavorite(e,i)}async isFavorited(e,t,a){return null!==await this.getFavorite(e,t,a)}async registerUser(e,t){await this.storage.registerUser(e,t)}async verifyUser(e,t){return this.storage.verifyUser(e,t)}async checkUserExist(e){return this.storage.checkUserExist(e)}async getSearchHistory(e){return this.storage.getSearchHistory(e)}async addSearchHistory(e,t){await this.storage.addSearchHistory(e,t)}async deleteSearchHistory(e,t){await this.storage.deleteSearchHistory(e,t)}async getAllUsers(){return"function"==typeof this.storage.getAllUsers?this.storage.getAllUsers():[]}async getAdminConfig(){return"function"==typeof this.storage.getAdminConfig?this.storage.getAdminConfig():null}async saveAdminConfig(e){"function"==typeof this.storage.setAdminConfig&&await this.storage.setAdminConfig(e)}async getSkipConfig(e,t,a){return"function"==typeof this.storage.getSkipConfig?this.storage.getSkipConfig(e,t,a):null}async setSkipConfig(e,t,a,i){"function"==typeof this.storage.setSkipConfig&&await this.storage.setSkipConfig(e,t,a,i)}async deleteSkipConfig(e,t,a){"function"==typeof this.storage.deleteSkipConfig&&await this.storage.deleteSkipConfig(e,t,a)}async getAllSkipConfigs(e){return"function"==typeof this.storage.getAllSkipConfigs?this.storage.getAllSkipConfigs(e):{}}constructor(){this.storage=T()}}new b},59546:function(e,t,a){"use strict";a.d(t,{J:function(){return o},s:function(){return n}});var i=a(77914),r=a(2551);async function n(e,t){try{let a=e.api,n="".concat(a).concat(i.Hz.search.path).concat(encodeURIComponent(t)),s=e.name,o=new AbortController,c=setTimeout(()=>o.abort(),8e3),l=await fetch(n,{headers:i.Hz.search.headers,signal:o.signal});if(clearTimeout(c),!l.ok)return[];let u=await l.json();if(!u||!u.list||!Array.isArray(u.list)||0===u.list.length)return[];let d=u.list.map(t=>{var a;let i=[];if(t.vod_play_url){let e=/\$(https?:\/\/[^"'\s]+?\.m3u8)/g;t.vod_play_url.split("$$$").forEach(t=>{let a=t.match(e)||[];a.length>i.length&&(i=a)})}return i=Array.from(new Set(i)).map(e=>{let t=(e=e.substring(1)).indexOf("(");return t>0?e.substring(0,t):e}),{id:t.vod_id.toString(),title:t.vod_name.trim().replace(/\s+/g," "),poster:t.vod_pic,episodes:i,source:e.key,source_name:s,class:t.vod_class,year:t.vod_year?(null===(a=t.vod_year.match(/\d{4}/))||void 0===a?void 0:a[0])||"":"unknown",desc:(0,r.L9)(t.vod_content||""),type_name:t.type_name,douban_id:t.vod_douban_id}}),h=(await (0,i.iE)()).SiteConfig.SearchDownstreamMaxPage,p=u.pagecount||1,y=Math.min(p-1,h-1);if(y>0){let n=[];for(let o=2;o<=y+1;o++){let c=a+i.Hz.search.pagePath.replace("{query}",encodeURIComponent(t)).replace("{page}",o.toString()),l=(async()=>{try{let t=new AbortController,a=setTimeout(()=>t.abort(),8e3),n=await fetch(c,{headers:i.Hz.search.headers,signal:t.signal});if(clearTimeout(a),!n.ok)return[];let o=await n.json();if(!o||!o.list||!Array.isArray(o.list))return[];return o.list.map(t=>{var a;let i=[];if(t.vod_play_url){let e=/\$(https?:\/\/[^"'\s]+?\.m3u8)/g;i=t.vod_play_url.match(e)||[]}return i=Array.from(new Set(i)).map(e=>{let t=(e=e.substring(1)).indexOf("(");return t>0?e.substring(0,t):e}),{id:t.vod_id.toString(),title:t.vod_name.trim().replace(/\s+/g," "),poster:t.vod_pic,episodes:i,source:e.key,source_name:s,class:t.vod_class,year:t.vod_year?(null===(a=t.vod_year.match(/\d{4}/))||void 0===a?void 0:a[0])||"":"unknown",desc:(0,r.L9)(t.vod_content||""),type_name:t.type_name,douban_id:t.vod_douban_id}})}catch(e){return[]}})();n.push(l)}(await Promise.all(n)).forEach(e=>{e.length>0&&d.push(...e)})}return d}catch(e){return[]}}let s=/(https?:\/\/[^"'\s]+?\.m3u8)/g;async function o(e,t){var a;let n;if(e.detail)return c(t,e);let o="".concat(e.api).concat(i.Hz.detail.path).concat(t),l=new AbortController,u=setTimeout(()=>l.abort(),1e4);try{n=await fetch(o,{headers:i.Hz.detail.headers,signal:l.signal})}catch(e){n=new Response(null,{status:0})}if(!n.ok)for(let e of["https://cors.isteed.cc/","https://cors.isteed.cc/https://"])try{let t=await fetch(e.endsWith("https://")?"".concat(e).concat(o.replace(/^https?:\/\//,"")):"".concat(e).concat(o),{headers:i.Hz.detail.headers});if(t.ok){n=t;break}}catch(e){}if(clearTimeout(u),!n.ok)throw Error("详情请求失败: ".concat(n.status));let d=await n.json();if(!d||!d.list||!Array.isArray(d.list)||0===d.list.length)throw Error("获取到的详情内容无效");let h=d.list[0],p=[];if(h.vod_play_url){let e=h.vod_play_url.split("$$$");e.length>0&&(p=e[0].split("#").map(e=>{let t=e.split("$");return t.length>1?t[1]:""}).filter(e=>e&&(e.startsWith("http://")||e.startsWith("https://"))))}return 0===p.length&&h.vod_content&&(p=(h.vod_content.match(s)||[]).map(e=>e.replace(/^\$/,""))),{id:t.toString(),title:h.vod_name,poster:h.vod_pic,episodes:p,source:e.key,source_name:e.name,class:h.vod_class,year:h.vod_year?(null===(a=h.vod_year.match(/\d{4}/))||void 0===a?void 0:a[0])||"":"unknown",desc:(0,r.L9)(h.vod_content),type_name:h.type_name,douban_id:h.vod_douban_id}}async function c(e,t){let a="".concat(t.detail,"/index.php/vod/detail/id/").concat(e,".html"),n=new AbortController,s=setTimeout(()=>n.abort(),1e4),o=await fetch(a,{headers:i.Hz.detail.headers,signal:n.signal});if(clearTimeout(s),!o.ok)throw Error("详情页请求失败: ".concat(o.status));let c=await o.text(),l=[];if("ffzy"===t.key){let e=/\$(https?:\/\/[^"'\s]+?\/\d{8}\/\d+_[a-f0-9]+\/index\.m3u8)/g;l=c.match(e)||[]}if(0===l.length){let e=/\$(https?:\/\/[^"'\s]+?\.m3u8)/g;l=c.match(e)||[]}l=Array.from(new Set(l)).map(e=>{let t=(e=e.substring(1)).indexOf("(");return t>0?e.substring(0,t):e});let u=c.match(/<h1[^>]*>([^<]+)<\/h1>/),d=u?u[1].trim():"",h=c.match(/<div[^>]*class=["']sketch["'][^>]*>([\s\S]*?)<\/div>/),p=h?(0,r.L9)(h[1]):"",y=c.match(/(https?:\/\/[^"'\s]+?\.jpg)/g),g=y?y[0].trim():"",m=c.match(/>(\d{4})</),f=m?m[1]:"unknown";return{id:e,title:d,poster:g,episodes:l,source:t.key,source_name:t.name,class:"",year:f,desc:p,type_name:"",douban_id:0}}},5523:function(e,t,a){"use strict";let i={homepage_password:"admin123",cache_time:7200,api_site:{dyttzy:{api:"http://caiji.dyttzyapi.com/api.php/provide/vod",name:"电影天堂资源",detail:"http://caiji.dyttzyapi.com"},heimuer:{api:"https://json.heimuer.xyz/api.php/provide/vod",name:"黑木耳",detail:"https://heimuer.tv"},ruyi:{api:"http://cj.rycjapi.com/api.php/provide/vod",name:"如意资源"},bfzy:{api:"https://bfzyapi.com/api.php/provide/vod",name:"暴风资源"},tyyszy:{api:"https://tyyszy.com/api.php/provide/vod",name:"天涯资源"},ffzy:{api:"http://ffzy5.tv/api.php/provide/vod",name:"非凡影视",detail:"http://ffzy5.tv"},zy360:{api:"https://360zy.com/api.php/provide/vod",name:"360资源"},maotaizy:{api:"https://caiji.maotaizy.cc/api.php/provide/vod",name:"茅台资源"},wolong:{api:"https://wolongzyw.com/api.php/provide/vod",name:"卧龙资源"},jisu:{api:"https://jszyapi.com/api.php/provide/vod",name:"极速资源",detail:"https://jszyapi.com"},dbzy:{api:"https://dbzy.tv/api.php/provide/vod",name:"豆瓣资源"},mozhua:{api:"https://mozhuazy.com/api.php/provide/vod",name:"魔爪资源"},mdzy:{api:"https://www.mdzyapi.com/api.php/provide/vod",name:"魔都资源"},zuid:{api:"https://api.zuidapi.com/api.php/provide/vod",name:"最大资源"},yinghua:{api:"https://m3u8.apiyhzy.com/api.php/provide/vod",name:"樱花资源"},wujin:{api:"https://api.wujinapi.me/api.php/provide/vod",name:"无尽资源"},wwzy:{api:"https://wwzy.tv/api.php/provide/vod",name:"旺旺短剧"},ikun:{api:"https://ikunzyapi.com/api.php/provide/vod",name:"iKun资源"},lzi:{api:"https://cj.lziapi.com/api.php/provide/vod",name:"量子资源站"},xiaomaomi:{api:"https://zy.xmm.hk/api.php/provide/vod",name:"小猫咪资源"}}};t.Z=i}}]);